# PRE-PROCESSING PARAMETERS
debug_mode: True # debug_mode - save pairs as both npy and jpeg
change_detection: True # change_detection - if True, uses T1 + T2. if False, use only T2.
two_classes_problem: False # two_classes_problem - if True, uses a binary mask. if False, uses a 3-classes mask.
tiles_tr: [1,3,5,8,11,13,14,20]
tiles_val: [6,19]
patch_size: 128 
overlap: 0.7 # used to calculate stride
save_patches: True # if False, save only image pairs (expected input from pix2pix net)
save_tiles: False # save testing tiles 
save_image_pairs: True
synthetic_input_mode: 1
max_input_samples: 10000 # maximo de itens a serem gerados para entrada do pix2pix treinado
goal_percentage: 2 # minimum percentage when using dilation
min_percentage: 2 # minimum NEW deforestation required per patch (new deforestation - class 1)
root_path:  '/Users/amanda/Documents/GitHub/Sentinel2/' # path to images
output_path:  '/Users/amanda/Documents/GitHub/samples/' # path to save patches
load_scaler: False # if True, will load provided scaler to use for normalization
scaler_path: ''
lim_x: 17700 # 10000
lim_y: 9200 # 7000
type_norm: 3  # 0: MinMax(0,255), 1: Standard, 2: MinMax(0,1), 3: MinMax(-1,1)
channels: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 
debug_channels: [0, 1, 2]
# 0 - blue *
# 1 - green *
# 2 - red
# 3 - NIR *
# 4 - vegetation red edge (0.705 um)
# 5 - vegetation red edge (0.740 um)
# 6 - vegetation red edge (0.783 um)
# 7 - vegetation red edge (0.865 um)
# 8 - SWIR (1.610 um)
# 9 - SWIR (2.190um)

# TRAINING PARAMETERS - PIX2PIX
data_path: ''
training_steps: 500000
checkpoint_steps: 50000 # interval to save checkpoint
batch_size: 1 # The batch size of 1 produced better results for the U-Net in the original pix2pix experiment
gen_loss_type: 'default' # 'default' or 'weighted_l1'
lambda: 100 # weight on L1 term
gan_weight: 1.0 # weight on GAN term
alpha: 5.51 # weigth on L1 mask term. used when loss if 'weighted_l1'
beta: 1.22 # weigth on L1 out term.  used when loss if 'weighted_l1'
image_width: 128
image_height: 128
output_channels: 10
checkpoint_folder: '' # used when running with --inference flag
#buffer_size: 100
ngf: 64 # number of generator filters in first conv layer
ndf: 64 # number of discriminator filters in first conv layer
lr: 0.0002 # initial learning rate for Adam
beta1: 0.5 # momentum for Adam
residual_generator: False # use residual blocks instead of skip connections
number_residuals: 3 
drop_blocs: 0 # blocks to be dropped in encoder/decoder; maximum supported (although not recommended): 7
synthetic_masks_path: 'trained_pix2pix_input/'
pix2pix_output_path: ''
slow_discriminator: False # if True, Generator params are optimized twice in the same training loop
fix_erratas: True

# TRAINING PARAMETERS - UNET
unet_data_path: ''
synthetic_data_path: ''
selected_synt_file: ''
pix2pix_max_samples: 500
training_output_path: '/unet-results/'
input_channels: 20
epochs_unet: 100
batch_size_unet: 32
nb_filters: [32, 64, 128]
times: 5
patience_value: 10
type_norm_unet: 1
lr_unet: 0.001 
beta1_unet: 0.9
augment_data: False
run_inference_on_cpu: True
unet_testing_path: 'C:/Users/amandalucs/Documents/Github/unet-results/2022_03_11_21_05_47_augmented'
combine_t2: False # if True, u-net uses mask to combine real and fake t2 according to classes (0, 2 -> real t2; 1 -> fake t2)